//@version=5
indicator("Financial Data", overlay = true, format = format.volume, precision = 2)

truncate(num) =>
    factor = math.pow(10, 2)
    int(num * factor) / factor

// MARKET CAP
// Market capitalization is equal to the share price multiplied by the number of shares outstanding
number_of_shares = request.financial(syminfo.tickerid, "TOTAL_SHARES_OUTSTANDING", "FQ")
MarketCap = number_of_shares * close

// EARNING PER SHARE
// Earnings per share (EPS) is a company's net profit divided by the number of common shares it has outstanding.
EPS = request.financial(syminfo.tickerid, "EARNINGS_PER_SHARE", "TTM")

// EARNING YEILD
// The earnings yield is calculated by dividing earnings per share for the last 12-month period by the current market price per share.
// Multiplying the result by 100 yields the Earnings Yield % value.
EarningsYield = (EPS / close) * 100

// BOOK VALUE PER SHARE
// Book value per share (BVPS) is the ratio of equity available to common shareholders divided by the number of outstanding shares. 
BVPS = request.financial(syminfo.tickerid, "BOOK_VALUE_PER_SHARE", "FQ")

// PRICE BOOK RATIO
// Price Book Ratio is calculated by dividing the price per share by the book value per share.
PriceBookRatio = close / BVPS

// PRICE EARNING RATIO
// Price Earnings Ratio is calculated by dividing the current market price per share by the earnings per share for the last 12-month period.
PriceEarningsRatio = close / EPS

background_color = color.navy
text_align = text.align_left

var myTable = table.new(position = position.top_right, columns = 2, rows = 8, bgcolor = background_color, border_width = 1, frame_color = color.white, frame_width = 3, border_color = color.white)

if(barstate.islast)
    table.cell(table_id = myTable, column = 0, row = 0, text = "Financial Term", text_color = color.white, bgcolor = background_color, text_halign = text_align)
    table.cell(table_id = myTable, column = 0, row = 1, text = "MARKET CAP", text_color = color.white, bgcolor = background_color, text_halign = text_align)
    table.cell(table_id = myTable, column = 0, row = 2, text = "EARNING PER SHARE", text_color = color.white, bgcolor = background_color, text_halign = text_align)
    table.cell(table_id = myTable, column = 0, row = 3, text = "EARNING YEILD", text_color = color.white, bgcolor = background_color, text_halign = text_align)
    table.cell(table_id = myTable, column = 0, row = 4, text = "BOOK VALUE PER SHARE", text_color = color.white, bgcolor = background_color, text_halign = text_align)
    table.cell(table_id = myTable, column = 0, row = 5, text = "PRICE BOOK RATIO", text_color = color.white, bgcolor = background_color, text_halign = text_align)
    table.cell(table_id = myTable, column = 0, row = 6, text = "PRICE EARNING RATIO", text_color = color.white, bgcolor = background_color, text_halign = text_align)
    
    table.cell(table_id = myTable, column = 1, row = 0, text = "Value", text_color = color.white, bgcolor = background_color, text_halign = text_align)
    table.cell(table_id = myTable, column = 1, row = 1, text = str.tostring(truncate(MarketCap)), text_color = color.white, bgcolor = background_color, text_halign = text_align)
    table.cell(table_id = myTable, column = 1, row = 2, text = str.tostring(truncate(EPS)), text_color = color.white, bgcolor = background_color, text_halign = text_align)
    table.cell(table_id = myTable, column = 1, row = 3, text = str.tostring(truncate(EarningsYield)), text_color = color.white, bgcolor = background_color, text_halign = text_align)
    table.cell(table_id = myTable, column = 1, row = 4, text = str.tostring(truncate(BVPS)), text_color = color.white, bgcolor = background_color, text_halign = text_align)
    table.cell(table_id = myTable, column = 1, row = 5, text = str.tostring(truncate(PriceBookRatio)), text_color = color.white, bgcolor = background_color, text_halign = text_align)
    table.cell(table_id = myTable, column = 1, row = 6, text = str.tostring(truncate(PriceEarningsRatio)), text_color = color.white, bgcolor = background_color, text_halign = text_align)
